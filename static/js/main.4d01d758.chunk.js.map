{"version":3,"sources":["components/Images/Slovakiet_2019_bjerg.jpg","components/Images/Slovakiet_2019_Paintball.jpg","components/Img.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","Images","image","alt","clas","className","src","Img","left","ImgLeft","class","ImgRight","App","scrolling","frameBorder","allow","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,kD,gBCA3CD,EAAOC,QAAU,IAA0B,sD,oMCMrCC,EAAS,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,KAE5B,OACE,yBAAKC,UAAWD,GACd,yBAAKE,IAAKJ,EAAOC,IAAKA,MA4BbI,EAhBH,SAAC,GAAmB,IAAjBJ,EAAgB,EAAhBA,IACb,OAD6B,EAAXK,KAGd,kBAAC,EAAD,CAAQN,MAAOO,IAASN,IAAKA,EAAKO,MAAM,gCAI1C,kBAAC,EAAD,CAAQR,MAAOS,IAAUR,IAAKA,EAAKO,MAAM,gCC8D9BE,EAvFH,WAEV,OACE,6BACF,4BAAQP,UAAU,oBAChB,yBAAKA,UAAU,kBACb,4BACE,6FAOJ,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,uBACb,4BACE,koBAgBJ,yBAAKA,UAAU,+BACb,kBAAC,EAAD,CAAKF,IAAI,GAAGK,MAAM,MAItB,yBAAKH,UAAU,eACb,yBAAKA,UAAU,uBAKjB,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,8BACf,kBAAC,EAAD,CAAKF,IAAI,GAAGK,MAAM,KAElB,yBAAKH,UAAU,uBACb,4BACE,uPAUN,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBAKjB,yBAAKA,UAAU,YACb,4BACEC,IAAI,4NACJO,UAAU,KAAKC,YAAY,IAAIC,MAAM,qBAEzC,4BAAQV,UAAU,UAEd,uBAAGA,UAAU,gBACX,uBAAGW,KAAK,8BAAR,QADF,OAGE,uBAAGA,KAAK,kDAAR,SAHF,OAKE,uBAAGA,KAAK,yCAAR,YAGF,uBAAGX,UAAU,uBAAb,iCCzEYY,QACW,cAA7BC,OAAOC,SAASC,UAEkB,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAC1B,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDoGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,iB","file":"static/js/main.4d01d758.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Slovakiet_2019_bjerg.b5deb407.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Slovakiet_2019_Paintball.395062bc.jpg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImgLeft from './Images/Slovakiet_2019_bjerg.jpg';\r\nimport ImgRight from './Images/Slovakiet_2019_Paintball.jpg';\r\n\r\n\r\nconst Images = ({ image, alt, clas }) => {\r\n\r\n  return (\r\n    <div className={clas}>\r\n      <img src={image} alt={alt} />\r\n    </div>\r\n  );\r\n};\r\n\r\nImages.propTypes = {\r\n  // eslint-disable-next-line react/no-typos\r\n  image: PropTypes.string,\r\n  alt: PropTypes.string.isRequired,\r\n  class: PropTypes.string.isRequired,\r\n};\r\n\r\nconst Img = ({ alt, left }) => {\r\n  if (left) {\r\n    return (\r\n      <Images image={ImgLeft} alt={alt} class=\"content-column-images-right\" />\r\n    );\r\n  }\r\n  return (\r\n    <Images image={ImgRight} alt={alt} class=\"content-column-images-left\" />\r\n  );\r\n};\r\n\r\nImg.propTypes = {\r\n  alt: PropTypes.string.isRequired,\r\n  left: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Img;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Img from './components/Img';\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <div> \r\n  <header className=\"header-container\">\r\n    <div className=\"header-content\">\r\n      <h1>\r\n        <span>\r\n          Velkommen til Klan Nissebanden - En del af solvanggruppe\r\n        </span>\r\n      </h1>\r\n    </div>\r\n  </header>\r\n \r\n    <div className=\"content-column\">\r\n      <div className=\"content-column-text\">\r\n        <h2>\r\n          <span>\r\n          For klanspejderne på 16-24 år er fællesskabet \r\n          og samværet med ens spejderkammerater i centrum. \r\n          Her har spejderne selv ansvar for arbejdet i patruljen, \r\n          de vælger selv deres leder, og de bestemmer \r\n          selv deres aktiviteter. De tager ofte på ture til \r\n          internationale lejre. Det er det udfordrende og \r\n          uafhængige spejderliv, som bliver afprøvet.\r\n          Spejderne selv har ansvaret for at udvikle og \r\n          gennemføre projekter. Det giver dem viden og \r\n          udvikler deres evner. For de ældste spejdere \r\n          kan et projekt godt vare længe, være stort \r\n          eller ske i samarbejde med spejdere fra andre grupper.\r\n        </span>\r\n        </h2>\r\n      </div>\r\n      <div className=\"content-column-images-right\">\r\n        <Img alt=\"\" left={false}  />\r\n      </div>\r\n    </div>\r\n \r\n    <div className=\"white-space\">\r\n      <div className=\"white-space-block\">\r\n\r\n      </div>\r\n    </div>\r\n \r\n    <div className=\"content-column\">\r\n      <div className=\"content-column-images-left\">\r\n      <Img alt=\"\" left={true}  />\r\n      </div>\r\n      <div className=\"content-column-text\">\r\n        <h2>\r\n          <span>\r\n          For mere info tjek vores facebook-fanside - \r\n          hvor der blandt andet kan findes en beskrivelse \r\n          af historien bag navnet, en track-artikel, \r\n          og billeder fra sidste års sommerlejr, som var en vandretur i Slovakiet.\r\n        </span>\r\n        </h2>\r\n      </div>\r\n    </div>\r\n \r\n    <div className=\"white-space\">\r\n      <div className=\"white-space-block\">\r\n\r\n      </div>\r\n    </div>\r\n \r\n    <div className=\"fb-embed\">\r\n      <iframe\r\n        src=\"https://www.facebook.com/plugins/page.php?href=https%3A%2F%2Fwww.facebook.com%2FNissebanden%2F&tabs=timeline&width=500&height=500&small_header=false&adapt_container_width=true&hide_cover=false&show_facepile=true&appId\"\r\n        scrolling=\"no\" frameBorder=\"0\" allow=\"encrypted-media\"></iframe>\r\n    </div>\r\n    <footer className=\"footer\">\r\n  \r\n        <p className=\"footer-links\">\r\n          <a href=\"https://www.Nissebanden.dk\">Home</a>\r\n          ·\r\n          <a href=\"https://www.facebook.com/pg/Nissebanden/about/\">About</a>\r\n          ·\r\n          <a href=\"https://www.facebook.com/Nissebanden/\">Contact</a>\r\n        </p>\r\n  \r\n        <p className=\"footer-company-name\">Klan Nissebanden &copy; 1991</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        // eslint-disable-next-line no-use-before-define\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        // eslint-disable-next-line no-use-before-define\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      // eslint-disable-next-line no-param-reassign\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else if (config && config.onSuccess) {\r\n              config.onSuccess(registration);\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(() => {\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n        || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch(() => {\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './App.css';\r\nimport './footer.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}